# Created by Octave 4.0.0, Wed Dec 02 14:59:05 2015 BRST <renato@renato-XPS-8500>
# name: identModel
# type: scalar struct
# ndims: 2
 1 1
# length: 17
# name: terms
# type: cell
# rows: 4
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
u(k-2)


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 12
u(k-1)y(k-1)


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
y(k-1)


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 12
u(k-2)y(k-1)





# name: termIndices
# type: matrix
# rows: 4
# columns: 1
 3
 7
 4
 9


# name: coeff
# type: matrix
# rows: 4
# columns: 1
 0.1
 -0.5
 0.1000000000000001
 -4.29159303892652e-17


# name: degree
# type: scalar
2


# name: Fs
# type: scalar
100


# name: ESR
# type: scalar
-4.440892098500626e-16


# name: noiseTerms
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
e(k-1)





# name: noiseTermIndices
# type: scalar
1


# name: noiseCoeff
# type: scalar
0.2090723837445708


# name: finalCoeff
# type: matrix
# rows: 4
# columns: 1
 0.1
 -0.5
 0.1000000000000001
 -1.212332670081863e-17


# name: finalNoiseCoeff
# type: scalar
-0.2477012102016882


# name: residue
# type: matrix
# rows: 413
# columns: 1
 0
 0
 -1.387778780781446e-17
 0
 -1.040834085586084e-17
 0
 -6.938893903907228e-18
 0
 -8.023096076392733e-18
 -6.938893903907228e-18
 2.775557561562891e-17
 1.387778780781446e-17
 5.204170427930421e-18
 3.469446951953614e-18
 0
 0
 0
 0
 -1.387778780781446e-17
 -1.387778780781446e-17
 -1.387778780781446e-17
 -3.469446951953614e-18
 6.938893903907228e-18
 0
 8.673617379884035e-19
 0
 0
 -1.387778780781446e-17
 -1.387778780781446e-17
 0
 0
 0
 0
 1.387778780781446e-17
 1.387778780781446e-17
 1.387778780781446e-17
 0
 -2.775557561562891e-17
 -1.387778780781446e-17
 5.204170427930421e-18
 1.387778780781446e-17
 0
 0
 0
 0
 0
 0
 1.387778780781446e-17
 -2.081668171172169e-17
 1.387778780781446e-17
 0
 -6.938893903907228e-18
 1.387778780781446e-17
 0
 0
 1.387778780781446e-17
 2.775557561562891e-17
 1.387778780781446e-17
 2.55871712706579e-17
 2.775557561562891e-17
 0
 -6.938893903907228e-18
 -8.673617379884035e-18
 0
 -1.387778780781446e-17
 0
 0
 -5.551115123125783e-17
 -6.938893903907228e-18
 3.469446951953614e-18
 0
 0
 0
 -2.081668171172169e-17
 -4.98732999343332e-18
 0
 0
 -5.551115123125783e-17
 2.42861286636753e-17
 1.387778780781446e-17
 -1.387778780781446e-17
 6.938893903907228e-18
 0
 3.469446951953614e-18
 0
 0
 -6.938893903907228e-18
 6.938893903907228e-18
 6.938893903907228e-18
 8.673617379884035e-19
 -2.775557561562891e-17
 2.775557561562891e-17
 0
 0
 0
 0
 0
 1.387778780781446e-17
 1.387778780781446e-17
 0
 0
 0
 0
 0
 1.387778780781446e-17
 0
 0
 -1.387778780781446e-17
 1.387778780781446e-17
 0
 0
 0
 1.387778780781446e-17
 1.040834085586084e-17
 -1.734723475976807e-18
 0
 6.938893903907228e-18
 1.387778780781446e-17
 0
 0
 -1.387778780781446e-17
 -3.903127820947816e-18
 -1.734723475976807e-18
 0
 -1.387778780781446e-17
 6.938893903907228e-18
 0
 0
 3.469446951953614e-18
 0
 0
 0
 0
 2.168404344971009e-18
 2.775557561562891e-17
 8.673617379884035e-18
 0
 -3.469446951953614e-18
 0
 1.040834085586084e-17
 0
 -6.938893903907228e-18
 1.387778780781446e-17
 0
 0
 -6.938893903907228e-18
 0
 -1.387778780781446e-17
 -1.387778780781446e-17
 -1.387778780781446e-17
 2.775557561562891e-17
 1.387778780781446e-17
 0
 0
 6.938893903907228e-18
 0
 0
 0
 -6.938893903907228e-18
 0
 0
 0
 0
 0
 -3.469446951953614e-18
 0
 0
 1.387778780781446e-17
 1.387778780781446e-17
 0
 0
 2.775557561562891e-17
 2.081668171172169e-17
 -1.734723475976807e-18
 0
 -1.734723475976807e-18
 0
 0
 0
 0
 -1.734723475976807e-17
 -1.387778780781446e-17
 0
 0
 -6.938893903907228e-18
 0
 1.387778780781446e-17
 0
 1.734723475976807e-18
 0
 1.387778780781446e-17
 1.387778780781446e-17
 0
 0
 1.387778780781446e-17
 0
 0
 0
 1.387778780781446e-17
 0
 0
 2.775557561562891e-17
 1.387778780781446e-17
 6.938893903907228e-18
 0
 -1.387778780781446e-17
 -2.775557561562891e-17
 0
 0
 -2.775557561562891e-17
 0
 0
 0
 -3.469446951953614e-17
 -2.775557561562891e-17
 0
 -1.734723475976807e-18
 0
 1.387778780781446e-17
 0
 0
 2.775557561562891e-17
 0
 -6.938893903907228e-18
 -6.938893903907228e-18
 -6.938893903907228e-18
 -1.387778780781446e-17
 -6.938893903907228e-18
 6.938893903907228e-18
 0
 -2.775557561562891e-17
 0
 -2.775557561562891e-17
 0
 -1.734723475976807e-18
 -8.673617379884035e-19
 0
 8.673617379884035e-18
 0
 -1.734723475976807e-18
 3.469446951953614e-18
 0
 0
 2.775557561562891e-17
 1.387778780781446e-17
 1.387778780781446e-17
 0
 0
 -1.734723475976807e-18
 -6.938893903907228e-18
 0
 6.938893903907228e-18
 0
 0
 0
 2.775557561562891e-17
 2.775557561562891e-17
 2.775557561562891e-17
 1.387778780781446e-17
 0
 1.387778780781446e-17
 1.734723475976807e-17
 0
 -1.387778780781446e-17
 0
 3.469446951953614e-18
 -1.387778780781446e-17
 1.387778780781446e-17
 0
 1.387778780781446e-17
 -2.775557561562891e-17
 0
 -1.387778780781446e-17
 -5.551115123125783e-17
 -6.938893903907228e-18
 0
 -4.119968255444917e-18
 0
 -6.505213034913027e-18
 -6.938893903907228e-18
 6.938893903907228e-18
 0
 0
 6.938893903907228e-18
 3.469446951953614e-18
 2.775557561562891e-17
 1.301042606982605e-18
 6.938893903907228e-18
 0
 0
 0
 0
 0
 2.775557561562891e-17
 1.387778780781446e-17
 1.387778780781446e-17
 6.938893903907228e-18
 1.387778780781446e-17
 0
 -3.469446951953614e-18
 0
 -6.938893903907228e-18
 0
 0
 0
 -8.326672684688674e-17
 0
 -3.469446951953614e-18
 8.673617379884035e-19
 0
 6.938893903907228e-18
 5.551115123125783e-17
 3.469446951953614e-18
 0
 -6.938893903907228e-18
 0
 0
 -5.551115123125783e-17
 -2.775557561562891e-17
 -4.119968255444917e-18
 0
 -1.387778780781446e-17
 -3.469446951953614e-18
 -3.469446951953614e-18
 0
 0
 3.469446951953614e-18
 3.469446951953614e-18
 0
 0
 1.734723475976807e-18
 1.387778780781446e-17
 0
 -4.336808689942018e-18
 -2.38524477946811e-18
 0
 0
 2.775557561562891e-17
 0
 -6.938893903907228e-18
 -6.938893903907228e-18
 0
 -1.387778780781446e-17
 -6.938893903907228e-18
 -1.387778780781446e-17
 0
 0
 0
 -6.938893903907228e-18
 0
 0
 0
 2.775557561562891e-17
 1.387778780781446e-17
 6.938893903907228e-18
 0
 0
 8.673617379884035e-19
 0
 0
 0
 0
 -2.775557561562891e-17
 1.387778780781446e-17
 0
 0
 0
 0
 0
 0
 0
 -6.938893903907228e-18
 0
 0
 -6.938893903907228e-18
 0
 1.387778780781446e-17
 0
 6.938893903907228e-18
 0
 0
 6.938893903907228e-18
 0
 0
 0
 3.469446951953614e-18
 6.938893903907228e-18
 0
 -6.938893903907228e-18
 0
 -1.387778780781446e-17
 -1.387778780781446e-17
 6.938893903907228e-18
 0
 -6.938893903907228e-18
 3.469446951953614e-18
 0
 0
 0
 0
 6.938893903907228e-18
 1.734723475976807e-18
 3.469446951953614e-18
 -6.938893903907228e-18
 0
 -1.734723475976807e-18
 0
 6.938893903907228e-18
 6.938893903907228e-18
 0
 1.387778780781446e-17
 0
 -6.938893903907228e-18


# name: delta
# type: scalar
0.1


# name: GFRF
# type: cell
# rows: 1
# columns: 3
# name: <cell-element>
# type: class
# classname: symfun
# length: 2
# name: sym
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: class
# classname: sym
# length: 6
# name: ascii
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 219
      -I*pi*f1     
      ---------    
          25       
     e             
-------------------
   /     -I*pi*f1 \
   |     ---------|
   |         50   |
   |    e         |
10*|1 - ----------|
   \        10    /





# name: extra
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 0
# columns: 0





# name: flat
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 47
exp(-I*pi*f1/25)/(10*(1 - exp(-I*pi*f1/50)/10))





# name: pickle
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 212
Mul(Rational(1, 10), Pow(Add(Integer(1), Mul(Integer(-1), Rational(1, 10), exp(Mul(Integer(-1), Rational(1, 50), I, pi, Symbol('f1'))))), Integer(-1)), exp(Mul(Integer(-1), Rational(1, 25), I, pi, Symbol('f1'))))





# name: size
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 1





# name: unicode
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 342
     -ⅈ⋅π⋅f₁      
     ────────     
        25        
    ℯ             
──────────────────
   ⎛     -ⅈ⋅π⋅f₁ ⎞
   ⎜     ────────⎟
   ⎜        50   ⎟
   ⎜    ℯ        ⎟
10⋅⎜1 - ─────────⎟
   ⎝        10   ⎠










# name: vars
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: class
# classname: sym
# length: 6
# name: ascii
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f1





# name: extra
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 0
# columns: 0





# name: flat
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f1





# name: pickle
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 12
Symbol('f1')





# name: size
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 1





# name: unicode
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
f₁
















# name: <cell-element>
# type: class
# classname: symfun
# length: 2
# name: sym
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: class
# classname: sym
# length: 6
# name: ascii
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1151
         -3*I*pi*f1   -I*pi*f2           -3*I*pi*f1   -I*pi*f2 
         -----------  ---------          -----------  ---------
              50          25                  50          50   
        e           *e                  e           *e         
- ----------------------------------- - -----------------------
                     /     -I*pi*f1 \        /     -I*pi*f1 \  
                     |     ---------|        |     ---------|  
                     |         50   |        |         50   |  
                     |    e         |        |    e         |  
  824878330446259200*|1 - ----------|     20*|1 - ----------|  
                     \        10    /        \        10    /  
---------------------------------------------------------------
                            /pi*f1   pi*f2\                    
                         -I*|----- + -----|                    
                            \  50      50 /                    
                        e                                      
                    1 - -------------------                    
                                 10                            





# name: extra
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 0
# columns: 0





# name: flat
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 193
(-exp(-3*I*pi*f1/50)*exp(-I*pi*f2/25)/(824878330446259200*(1 - exp(-I*pi*f1/50)/10)) - exp(-3*I*pi*f1/50)*exp(-I*pi*f2/50)/(20*(1 - exp(-I*pi*f1/50)/10)))/(1 - exp(-I*(pi*f1/50 + pi*f2/50))/10)





# name: pickle
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 781
Mul(Pow(Add(Integer(1), Mul(Integer(-1), Rational(1, 10), exp(Mul(Integer(-1), I, Add(Mul(Rational(1, 50), pi, Symbol('f1')), Mul(Rational(1, 50), pi, Symbol('f2'))))))), Integer(-1)), Add(Mul(Integer(-1), Rational(1, 824878330446259200), Pow(Add(Integer(1), Mul(Integer(-1), Rational(1, 10), exp(Mul(Integer(-1), Rational(1, 50), I, pi, Symbol('f1'))))), Integer(-1)), exp(Mul(Integer(-1), Rational(3, 50), I, pi, Symbol('f1'))), exp(Mul(Integer(-1), Rational(1, 25), I, pi, Symbol('f2')))), Mul(Integer(-1), Rational(1, 20), Pow(Add(Integer(1), Mul(Integer(-1), Rational(1, 10), exp(Mul(Integer(-1), Rational(1, 50), I, pi, Symbol('f1'))))), Integer(-1)), exp(Mul(Integer(-1), Rational(3, 50), I, pi, Symbol('f1'))), exp(Mul(Integer(-1), Rational(1, 50), I, pi, Symbol('f2'))))))





# name: size
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 1





# name: unicode
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1671
         -3⋅ⅈ⋅π⋅f₁   -ⅈ⋅π⋅f₂            -3⋅ⅈ⋅π⋅f₁   -ⅈ⋅π⋅f₂ 
         ──────────  ────────           ──────────  ────────
             50         25                  50         50   
        ℯ          ⋅ℯ                  ℯ          ⋅ℯ        
- ────────────────────────────────── - ─────────────────────
                     ⎛     -ⅈ⋅π⋅f₁ ⎞        ⎛     -ⅈ⋅π⋅f₁ ⎞ 
                     ⎜     ────────⎟        ⎜     ────────⎟ 
                     ⎜        50   ⎟        ⎜        50   ⎟ 
                     ⎜    ℯ        ⎟        ⎜    ℯ        ⎟ 
  824878330446259200⋅⎜1 - ─────────⎟     20⋅⎜1 - ─────────⎟ 
                     ⎝        10   ⎠        ⎝        10   ⎠ 
────────────────────────────────────────────────────────────
                           ⎛π⋅f₁   π⋅f₂⎞                    
                        -ⅈ⋅⎜──── + ────⎟                    
                           ⎝ 50     50 ⎠                    
                       ℯ                                    
                   1 - ─────────────────                    
                               10                           










# name: vars
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: cell
# rows: 1
# columns: 2
# name: <cell-element>
# type: class
# classname: sym
# length: 6
# name: ascii
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f1





# name: extra
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 0
# columns: 0





# name: flat
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f1





# name: pickle
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 12
Symbol('f1')





# name: size
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 1





# name: unicode
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
f₁








# name: <cell-element>
# type: class
# classname: sym
# length: 6
# name: ascii
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f2





# name: extra
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 0
# columns: 0





# name: flat
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f2





# name: pickle
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 12
Symbol('f2')





# name: size
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 1





# name: unicode
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
f₂
















# name: <cell-element>
# type: class
# classname: symfun
# length: 2
# name: sym
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: class
# classname: sym
# length: 6
# name: ascii
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4975
  /         -3*I*pi*f1   -I*pi*f2           -3*I*pi*f1   -I*pi*f2 \                                  /   
  |         -----------  ---------          -----------  ---------|     /pi*f1   pi*f2\  -I*pi*f3    |   
  |              50          25                  50          50   |  -I*|----- + -----|  ---------   |   
  |        e           *e                  e           *e         |     \  50      50 /      25      |   
  |- ----------------------------------- - -----------------------|*e                  *e            |- -
  |                     /     -I*pi*f1 \        /     -I*pi*f1 \  |                                  |   
  |                     |     ---------|        |     ---------|  |                                  |   
  |                     |         50   |        |         50   |  |                                  |   
  |                     |    e         |        |    e         |  |                                  |   
  |  824878330446259200*|1 - ----------|     20*|1 - ----------|  |                                  |  8
  \                     \        10    /        \        10    /  /                                  \   
- ------------------------------------------------------------------------------------------------ - ----
                                              /        /pi*f1   pi*f2\\                                  
                                              |     -I*|----- + -----||                                  
                                              |        \  50      50 /|                                  
                                              |    e                  |                                  
                            82487833044625920*|1 - -------------------|                                  
                                              \             10        /                                  
---------------------------------------------------------------------------------------------------------
                                                                                           /pi*f1   pi*f2
                                                                                        -I*|----- + -----
                                                                                           \  50      50 
                                                                                       e                 
                                                                                   1 - ------------------
                                                                                                    10   

      -3*I*pi*f1   -I*pi*f2           -3*I*pi*f1   -I*pi*f2 \                               
      -----------  ---------          -----------  ---------|     /pi*f1   pi*f2\  -I*pi*f3 
           50          25                  50          50   |  -I*|----- + -----|  ---------
     e           *e                  e           *e         |     \  50      50 /      50   
---------------------------------- - -----------------------|*e                  *e         
                  /     -I*pi*f1 \        /     -I*pi*f1 \  |                               
                  |     ---------|        |     ---------|  |                               
                  |         50   |        |         50   |  |                               
                  |    e         |        |    e         |  |                               
24878330446259200*|1 - ----------|     20*|1 - ----------|  |                               
                  \        10    /        \        10    /  /                               
--------------------------------------------------------------------------------------------
                                /        /pi*f1   pi*f2\\                                   
                                |     -I*|----- + -----||                                   
                                |        \  50      50 /|                                   
                                |    e                  |                                   
                              2*|1 - -------------------|                                   
                                \             10        /                                   
--------------------------------------------------------------------------------------------
   pi*f3\                                                                                   
 + -----|                                                                                   
     50 /                                                                                   
                                                                                            
---------                                                                                   
                                                                                            





# name: extra
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 0
# columns: 0





# name: flat
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 560
(-(-exp(-3*I*pi*f1/50)*exp(-I*pi*f2/25)/(824878330446259200*(1 - exp(-I*pi*f1/50)/10)) - exp(-3*I*pi*f1/50)*exp(-I*pi*f2/50)/(20*(1 - exp(-I*pi*f1/50)/10)))*exp(-I*(pi*f1/50 + pi*f2/50))*exp(-I*pi*f3/25)/(82487833044625920*(1 - exp(-I*(pi*f1/50 + pi*f2/50))/10)) - (-exp(-3*I*pi*f1/50)*exp(-I*pi*f2/25)/(824878330446259200*(1 - exp(-I*pi*f1/50)/10)) - exp(-3*I*pi*f1/50)*exp(-I*pi*f2/50)/(20*(1 - exp(-I*pi*f1/50)/10)))*exp(-I*(pi*f1/50 + pi*f2/50))*exp(-I*pi*f3/50)/(2*(1 - exp(-I*(pi*f1/50 + pi*f2/50))/10)))/(1 - exp(-I*(pi*f1/50 + pi*f2/50 + pi*f3/50))/10)





# name: pickle
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2213
Mul(Pow(Add(Integer(1), Mul(Integer(-1), Rational(1, 10), exp(Mul(Integer(-1), I, Add(Mul(Rational(1, 50), pi, Symbol('f1')), Mul(Rational(1, 50), pi, Symbol('f2')), Mul(Rational(1, 50), pi, Symbol('f3'))))))), Integer(-1)), Add(Mul(Integer(-1), Rational(1, 82487833044625920), Pow(Add(Integer(1), Mul(Integer(-1), Rational(1, 10), exp(Mul(Integer(-1), I, Add(Mul(Rational(1, 50), pi, Symbol('f1')), Mul(Rational(1, 50), pi, Symbol('f2'))))))), Integer(-1)), Add(Mul(Integer(-1), Rational(1, 824878330446259200), Pow(Add(Integer(1), Mul(Integer(-1), Rational(1, 10), exp(Mul(Integer(-1), Rational(1, 50), I, pi, Symbol('f1'))))), Integer(-1)), exp(Mul(Integer(-1), Rational(3, 50), I, pi, Symbol('f1'))), exp(Mul(Integer(-1), Rational(1, 25), I, pi, Symbol('f2')))), Mul(Integer(-1), Rational(1, 20), Pow(Add(Integer(1), Mul(Integer(-1), Rational(1, 10), exp(Mul(Integer(-1), Rational(1, 50), I, pi, Symbol('f1'))))), Integer(-1)), exp(Mul(Integer(-1), Rational(3, 50), I, pi, Symbol('f1'))), exp(Mul(Integer(-1), Rational(1, 50), I, pi, Symbol('f2'))))), exp(Mul(Integer(-1), I, Add(Mul(Rational(1, 50), pi, Symbol('f1')), Mul(Rational(1, 50), pi, Symbol('f2'))))), exp(Mul(Integer(-1), Rational(1, 25), I, pi, Symbol('f3')))), Mul(Integer(-1), Rational(1, 2), Pow(Add(Integer(1), Mul(Integer(-1), Rational(1, 10), exp(Mul(Integer(-1), I, Add(Mul(Rational(1, 50), pi, Symbol('f1')), Mul(Rational(1, 50), pi, Symbol('f2'))))))), Integer(-1)), Add(Mul(Integer(-1), Rational(1, 824878330446259200), Pow(Add(Integer(1), Mul(Integer(-1), Rational(1, 10), exp(Mul(Integer(-1), Rational(1, 50), I, pi, Symbol('f1'))))), Integer(-1)), exp(Mul(Integer(-1), Rational(3, 50), I, pi, Symbol('f1'))), exp(Mul(Integer(-1), Rational(1, 25), I, pi, Symbol('f2')))), Mul(Integer(-1), Rational(1, 20), Pow(Add(Integer(1), Mul(Integer(-1), Rational(1, 10), exp(Mul(Integer(-1), Rational(1, 50), I, pi, Symbol('f1'))))), Integer(-1)), exp(Mul(Integer(-1), Rational(3, 50), I, pi, Symbol('f1'))), exp(Mul(Integer(-1), Rational(1, 50), I, pi, Symbol('f2'))))), exp(Mul(Integer(-1), I, Add(Mul(Rational(1, 50), pi, Symbol('f1')), Mul(Rational(1, 50), pi, Symbol('f2'))))), exp(Mul(Integer(-1), Rational(1, 50), I, pi, Symbol('f3'))))))





# name: size
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 1





# name: unicode
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6708
  ⎛         -3⋅ⅈ⋅π⋅f₁   -ⅈ⋅π⋅f₂            -3⋅ⅈ⋅π⋅f₁   -ⅈ⋅π⋅f₂ ⎞                               ⎛         
  ⎜         ──────────  ────────           ──────────  ────────⎟     ⎛π⋅f₁   π⋅f₂⎞  -ⅈ⋅π⋅f₃    ⎜         
  ⎜             50         25                  50         50   ⎟  -ⅈ⋅⎜──── + ────⎟  ────────   ⎜         
  ⎜        ℯ          ⋅ℯ                  ℯ          ⋅ℯ        ⎟     ⎝ 50     50 ⎠     25      ⎜        ℯ
  ⎜- ────────────────────────────────── - ─────────────────────⎟⋅ℯ                ⋅ℯ           ⎜- ───────
  ⎜                     ⎛     -ⅈ⋅π⋅f₁ ⎞        ⎛     -ⅈ⋅π⋅f₁ ⎞ ⎟                               ⎜         
  ⎜                     ⎜     ────────⎟        ⎜     ────────⎟ ⎟                               ⎜         
  ⎜                     ⎜        50   ⎟        ⎜        50   ⎟ ⎟                               ⎜         
  ⎜                     ⎜    ℯ        ⎟        ⎜    ℯ        ⎟ ⎟                               ⎜         
  ⎜  824878330446259200⋅⎜1 - ─────────⎟     20⋅⎜1 - ─────────⎟ ⎟                               ⎜  8248783
  ⎝                     ⎝        10   ⎠        ⎝        10   ⎠ ⎠                               ⎝         
- ────────────────────────────────────────────────────────────────────────────────────────── - ──────────
                                            ⎛        ⎛π⋅f₁   π⋅f₂⎞⎞                                      
                                            ⎜     -ⅈ⋅⎜──── + ────⎟⎟                                      
                                            ⎜        ⎝ 50     50 ⎠⎟                                      
                                            ⎜    ℯ                ⎟                                      
                          82487833044625920⋅⎜1 - ─────────────────⎟                                      
                                            ⎝            10       ⎠                                      
─────────────────────────────────────────────────────────────────────────────────────────────────────────
                                                                                       ⎛π⋅f₁   π⋅f₂   π⋅f
                                                                                    -ⅈ⋅⎜──── + ──── + ───
                                                                                       ⎝ 50     50     50
                                                                                   ℯ                     
                                                                               1 - ──────────────────────
                                                                                              10         

-3⋅ⅈ⋅π⋅f₁   -ⅈ⋅π⋅f₂            -3⋅ⅈ⋅π⋅f₁   -ⅈ⋅π⋅f₂ ⎞                            
──────────  ────────           ──────────  ────────⎟     ⎛π⋅f₁   π⋅f₂⎞  -ⅈ⋅π⋅f₃ 
    50         25                  50         50   ⎟  -ⅈ⋅⎜──── + ────⎟  ────────
          ⋅ℯ                  ℯ          ⋅ℯ        ⎟     ⎝ 50     50 ⎠     50   
─────────────────────────── - ─────────────────────⎟⋅ℯ                ⋅ℯ        
            ⎛     -ⅈ⋅π⋅f₁ ⎞        ⎛     -ⅈ⋅π⋅f₁ ⎞ ⎟                            
            ⎜     ────────⎟        ⎜     ────────⎟ ⎟                            
            ⎜        50   ⎟        ⎜        50   ⎟ ⎟                            
            ⎜    ℯ        ⎟        ⎜    ℯ        ⎟ ⎟                            
30446259200⋅⎜1 - ─────────⎟     20⋅⎜1 - ─────────⎟ ⎟                            
            ⎝        10   ⎠        ⎝        10   ⎠ ⎠                            
────────────────────────────────────────────────────────────────────────────────
                        ⎛        ⎛π⋅f₁   π⋅f₂⎞⎞                                 
                        ⎜     -ⅈ⋅⎜──── + ────⎟⎟                                 
                        ⎜        ⎝ 50     50 ⎠⎟                                 
                        ⎜    ℯ                ⎟                                 
                      2⋅⎜1 - ─────────────────⎟                                 
                        ⎝            10       ⎠                                 
────────────────────────────────────────────────────────────────────────────────
₃⎞                                                                              
─⎟                                                                              
 ⎠                                                                              
                                                                                
──                                                                              
                                                                                










# name: vars
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: cell
# rows: 1
# columns: 3
# name: <cell-element>
# type: class
# classname: sym
# length: 6
# name: ascii
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f1





# name: extra
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 0
# columns: 0





# name: flat
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f1





# name: pickle
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 12
Symbol('f1')





# name: size
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 1





# name: unicode
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
f₁








# name: <cell-element>
# type: class
# classname: sym
# length: 6
# name: ascii
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f2





# name: extra
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 0
# columns: 0





# name: flat
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f2





# name: pickle
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 12
Symbol('f2')





# name: size
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 1





# name: unicode
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
f₂








# name: <cell-element>
# type: class
# classname: sym
# length: 6
# name: ascii
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f3





# name: extra
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 0
# columns: 0





# name: flat
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 2
f3





# name: pickle
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 12
Symbol('f3')





# name: size
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 1





# name: unicode
# type: cell
# rows: 1
# columns: 1
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
f₃


















# name: GFRFdegree
# type: scalar
3


# name: NOFRF
# type: complex matrix
# rows: 1
# columns: 501
 (0.02479090911644488,-4.898706740056429e-13) (8.137052184267228e-05,-9.594149544040621e-07) (8.136826305630868e-05,-1.919001952288491e-06) (8.136445577397339e-05,-2.878926118447587e-06) (8.135914034299043e-05,-3.839364259509955e-06) (8.135230596205942e-05,-4.800485665229256e-06) (8.134389762727909e-05,-5.762455393450736e-06) (8.133396315841163e-05,-6.72545313784621e-06) (8.13224341845407e-05,-7.689640492486041e-06) (8.130933508329068e-05,-8.655197627323958e-06) (8.129464482775717e-05,-9.622294996742444e-06) (8.127830255425542e-05,-1.059109664786784e-05) (8.126033858342889e-05,-1.156178700218292e-05) (8.124068024700119e-05,-1.253452704529468e-05) (8.121933623321439e-05,-1.350950079897703e-05) (8.119627509547225e-05,-1.448688104652913e-05) (8.117142970439186e-05,-1.546683256246604e-05) (8.114481318454374e-05,-1.644954485511339e-05) (8.111634792592798e-05,-1.743518021829282e-05) (8.108602712617148e-05,-1.842392719211997e-05) (8.105380865594675e-05,-1.941596214602646e-05) (8.101961861280518e-05,-2.041145236226806e-05) (8.098345314663197e-05,-2.141059302493354e-05) (8.094522895113158e-05,-2.241354960042564e-05) (8.09049238950177e-05,-2.342051629816228e-05) (8.086248475716571e-05,-2.443167421770873e-05) (8.081783026360749e-05,-2.544719511704955e-05) (8.077093970903501e-05,-2.646728072029445e-05) (8.072172328182442e-05,-2.749210180169496e-05) (8.067014341330984e-05,-2.852185914363529e-05) (8.061613542241944e-05,-2.955674044722911e-05) (8.055960988607444e-05,-3.059692390931341e-05) (8.05005292333068e-05,-3.164261898540507e-05) (8.043879618252852e-05,-3.269400398099156e-05) (8.037435756130785e-05,-3.375128773688033e-05) (8.030713663301529e-05,-3.481466645418228e-05) (8.023703488428322e-05,-3.588432702545522e-05) (8.016399782008834e-05,-3.69604883127344e-05) (8.008791945114405e-05,-3.804333853877286e-05) (8.000873069205554e-05,-3.913309651983987e-05) (7.992634197669869e-05,-4.022996921696052e-05) (7.984064462257877e-05,-4.133415483396998e-05) (7.975156679496436e-05,-4.244588369749412e-05) (7.965899249128332e-05,-4.356535686996714e-05) (7.956283619244472e-05,-4.469280523057463e-05) (7.946299443918595e-05,-4.582844951242489e-05) (7.935934708674269e-05,-4.697250218518035e-05) (7.925180428865357e-05,-4.812520766758979e-05) (7.914023853743609e-05,-4.928678293736031e-05) (7.902454688125383e-05,-5.045747459540722e-05) (7.890461081503823e-05,-5.163751977361594e-05) (7.878029707976997e-05,-5.282714905733286e-05) (7.865149682288065e-05,-5.402662428826603e-05) (7.851806916578643e-05,-5.523618240528153e-05) (7.837989254368444e-05,-5.64560890939382e-05) (7.823683171951904e-05,-5.768660230674511e-05) (7.80887383600578e-05,-5.892797498890935e-05) (7.793548320204991e-05,-6.018049061358837e-05) (7.777690974984324e-05,-6.144441081891139e-05) (7.761287614906428e-05,-6.272002506465028e-05) (7.744322834375673e-05,-6.400761713084123e-05) (7.726780048387477e-05,-6.530746766793882e-05) (7.7086440981207e-05,-6.661988710725405e-05) (7.689897497410168e-05,-6.794516760580158e-05) (7.670523808270374e-05,-6.928362831368749e-05) (7.650505477757491e-05,-7.063558510403479e-05) (7.6298238667043e-05,-7.200135297925306e-05) (7.608461325149597e-05,-7.338127612254832e-05) (7.586398201315301e-05,-7.477568446299492e-05) (7.563615502345731e-05,-7.618493441150241e-05) (7.540093194489698e-05,-7.760938188923564e-05) (7.515810209133707e-05,-7.904938468142123e-05) (7.490746069865314e-05,-8.050532948197097e-05) (7.464878543630898e-05,-8.197759332647746e-05) (7.438185702837911e-05,-8.346657967709563e-05) (7.410644609911405e-05,-8.497269487803548e-05) (7.382231302767001e-05,-8.649635050267041e-05) (7.352922047842924e-05,-8.803798737768654e-05) (7.322691521594613e-05,-8.959804202664771e-05) (7.291514382107872e-05,-9.117697815681219e-05) (7.259364264915977e-05,-9.277526663204619e-05) (7.22621375205121e-05,-9.439338792962151e-05) (7.192035319937329e-05,-9.603185327789421e-05) (7.156799950302535e-05,-9.769117626012104e-05) (7.120478312923518e-05,-9.93718999804311e-05) (7.083040010557061e-05,-0.0001010745807670325) (7.044453539206845e-05,-0.000102799791095064) (7.004687002826829e-05,-0.0001045481383829149) (6.963707073313803e-05,-0.000106320242269394) (6.921479893085157e-05,-0.0001081167585225208) (6.877970539440061e-05,-0.0001099383676281118) (6.833143024277636e-05,-0.0001117857800676982) (6.786960905927889e-05,-0.0001136597557787177) (6.739386635111339e-05,-0.0001155610914661667) (6.690382465651626e-05,-0.0001174906491293447) (6.639910463995e-05,-0.0001194493628992592) (6.587933294772356e-05,-0.0001214382726885635) (6.534416409814294e-05,-0.0001234586002675407) (6.479331909372611e-05,-0.0001255118873669695) (6.422674011561889e-05,-0.0001276005050362457) (6.364562798775832e-05,-0.0001297309928658216) (6.304479376302135e-05,-0.0001318902796504753) (6.242065229599656e-05,-0.0001340688296718124) (6.177581426008215e-05,-0.0001362769676990346) (6.11103906778207e-05,-0.0001385176320010629) (6.042410846023639e-05,-0.0001407927666269292) (5.971653806727218e-05,-0.0001431039975655035) (5.898716174165658e-05,-0.0001454528324469823) (5.823539520976364e-05,-0.0001478407305192474) (5.746060379351047e-05,-0.0001502691481896723) (5.666210577958937e-05,-0.0001527395576461956) (5.583917477005949e-05,-0.0001552534624856479) (5.499104342182162e-05,-0.0001578124127205841) (5.411689946955545e-05,-0.0001604180075740057) (5.321588929463811e-05,-0.0001630719060275729) (5.228711413055072e-05,-0.0001657758310836898) (5.13296279950287e-05,-0.0001685315765748514) (5.034243844859068e-05,-0.0001713410156773081) (4.932450010852496e-05,-0.0001742061039541977) (4.827471671316486e-05,-0.0001771288865182285) (4.719193536808426e-05,-0.0001801115038864643) (4.607494295115403e-05,-0.0001831561993091503) (4.492246565221847e-05,-0.0001862653269198648) (4.373316051168955e-05,-0.0001894413585549822) (4.250561657048517e-05,-0.0001926868908666888) (4.123834704627597e-05,-0.0001960046547848198) (3.992978405655405e-05,-0.0001993975253382653) (3.857827673778041e-05,-0.0002028685315166502) (3.718208014600884e-05,-0.0002064208681608021) (3.573935505256001e-05,-0.0002100579051735139) (3.424815724128948e-05,-0.0002137832020909348) (3.270642972786176e-05,-0.0002176005222855639) (3.111199859508696e-05,-0.0002215138468500785) (2.946255806582465e-05,-0.0002255273933435929) (2.775566780372736e-05,-0.0002296456299348036) (2.598873790839079e-05,-0.0002338732974781186) (2.41590170981518e-05,-0.0002382154310705394) (2.226358455000824e-05,-0.0002426773815230809) (2.029932915369629e-05,-0.0002472648442592403) (1.826294211609301e-05,-0.0002519838829044142) (1.615089516748997e-05,-0.0002568409632581029) (1.39594219079575e-05,-0.0002618429874381613) (1.16845024624455e-05,-0.0002669973290869913) (9.321833349365461e-06,-0.0002723118787295434) (6.866811251390661e-06,-0.0002777950847266266) (4.314499830228489e-06,-0.0002834560075026418) (1.659598956803777e-06,-0.0002893043760676865) (-1.103583898522177e-06,-0.000295350648338204) (-3.981180479490715e-06,-0.0003016060859961446) (-6.979792481480943e-06,-0.0003080828247865963) (-1.010654984818929e-05,-0.0003147939715273626) (-1.336915944445894e-05,-0.0003217536964887956) (-1.677596147165265e-05,-0.0003289773443492176) (-2.033600632978639e-05,-0.0003364815633675761) (-2.405911665999062e-05,-0.0003442844366433555) (-2.795598893196746e-05,-0.0003524056542968385) (-3.203828290577604e-05,-0.0003608666852089513) (-3.63187316032066e-05,-0.0003696909855340885) (-4.081127864762253e-05,-0.0003789042385265786) (-4.553120814175441e-05,-0.0003885346144114546) (-5.0495331586266e-05,-0.0003986130948735589) (-5.572216944926519e-05,-0.0004091738195652526) (-6.123217511055958e-05,-0.000420254503372195) (-6.70480051020221e-05,-0.0004318969207910063) (-7.319482381618452e-05,-0.0004441474887277093) (-7.970058414740772e-05,-0.0004570577753466115) (-8.659662288754339e-05,-0.0004706855822934682) (-9.391796171982006e-05,-0.0004850955357988752) (-0.0001017039984819782,-0.0005003603312791198) (-0.0001099991857245988,-0.0005165620094303061) (-0.0001188537909658444,-0.0005337933635412598) (-0.0001283250863796544,-0.0005521600884643498) (-0.000138478373027307,-0.0005717827411193033) (-0.0001493885818992845,-0.0005927996472194105) (-0.0001611420872481406,-0.0006153702760846364) (-0.0001738388983088081,-0.0006396793037857742) (-0.0001875956789290227,-0.0006659421129924467) (-0.0002025491074407595,-0.0006944110986955077) (-0.0002188605172267765,-0.0007253841720172219) (-0.00023672168570369,-0.0007592154799844401) (-0.0002563622864534523,-0.000796329197095088) (-0.0002780599749731998,-0.0008372380464477004) (-0.000302153322087508,-0.0008825673190373938) (-0.0003290596667816796,-0.0009330877635169184) (-0.000359299379637443,-0.0009897604419763855) (-0.000393529769548796,-0.001053799331029326) (-0.0004325933142329996,-0.001126760393506547) (-0.0004775877651913673,-0.001210671094282335) (-0.0005299708011042085,-0.001308223655358972) (-0.0005917206843463151,-0.001423071815885129) (-0.0006655914697579319,-0.001560302165746682) (-0.0007555346346193462,-0.00172721287611248) (-0.0008674291875970996,-0.001934662211972739) (-0.001010420259402687,-0.00219954082704965) (-0.001199553055662683,-0.002549636595205816) (-0.001461446021861712,-0.003034112702076312) (-0.001848068513494947,-0.003748954452171063) (-0.002476351563767981,-0.004910128820301576) (-0.003675828104561794,-0.007126270074044551) (-0.006874474172109847,-0.01303479349289972) (-0.042059786772505,-0.07802142066496159) (0.01071822215572158,0.01945673494241148) (0.004854011667840983,0.008625034313450798) (0.003178527898050927,0.005529751363637019) (0.002384878965205372,0.004063187504080064) (0.001921916233631003,0.003207392999572892) (0.001618593582133586,0.002646452440248038) (0.001404480271904482,0.002250283031044072) (0.001245263897715513,0.00195551112116542) (0.001122228619450082,0.001727569280621366) (0.001024297722819761,0.001545999248239466) (0.0009444969852881261,0.001397919910858185) (0.0008782163440507408,0.001274816644812642) (0.0008222863857295952,0.00117083565772941) (0.0007744563829920362,0.00108181991780017) (0.0007330839207208569,0.001004735923383542) (0.0006969423892214476,0.0009373181584010466) (0.0006650972449970352,0.0008778405207903611) (0.0006368239591083917,0.0008249648047318466) (0.0006115521719243312,0.0007776375347210957) (0.0005888267563208044,0.0007350180633045787) (0.0005682801134002291,0.0006964274146561661) (0.000549612109691706,0.0006613111977362422) (0.0005325752718534478,0.0006292122892444376) (0.0005169637319201327,0.0005997503967811726) (0.0005026048357052061,0.0005726065676334121) (0.0004893527008521313,0.0005475113067591212) (0.0004770832343942338,0.0005242353417118157) (0.0004656902041041979,0.0005025823935854625) (0.0004550821446700805,0.0004823834463016223) (0.0004451798781559811,0.0004634921705426989) (0.0004359145134067285,0.0004457812477870181) (0.0004272258405236172,0.0004291393716664104) (0.0004190609984914964,0.0004134688132496643) (0.0004113733938789705,0.0003986834097999099) (0.0004041217997613435,0.0003847069003772772) (0.0003972695998939992,0.000371471551328556) (0.0003907841735428989,0.0003589169866259402) (0.0003846363587342146,0.0003469892216349028) (0.0003788000112955927,0.0003356398367667108) (0.0003732516262221374,0.0003248252748321893) (0.0003679700078046358,0.0003145062550446517) (0.000362936003881133,0.000304647248996876) (0.0003581322597000971,0.0002952160500277408) (0.0003535430165479794,0.0002861833914581809) (0.0003491539349226094,0.0002775226139033245) (0.0003449519332875,0.0002692093919787142) (0.0003409250631995112,0.0002612214711163976) (0.0003370623842618242,0.0002535384593213843) (0.0003333538638378423,0.000246141633982377) (0.0003297902877779617,0.0002390137686019595) (0.0003263631739482558,0.0002321389982848099) (0.0003230647099923325,0.0002255026732765942) (0.0003198876843044279,0.0002190912528052428) (0.0003168254324989049,0.0002128921999436164) (0.000313871789685083,0.0002068938832272679) (0.0003110210404354183,0.0002010855095833349) (0.0003082678864024792,0.0001954570344146902) (0.0003056074055950004,0.0001899991062158767) (0.0003030350220922605,0.000184703005886963) (0.0003005464794329368,0.0001795605859290658) (0.0002981378099256889,0.0001745642387162424) (0.0002958053171184051,0.0001697068357602952) (0.0002935455505410278,0.0001649816992788941) (0.00029135528767074,0.0001603825654789723) (0.0002892315185847333,0.0001559035435576487) (0.0002871714264430245,0.0001515391037281131) (0.000285172377421815,0.0001472840323391649) (0.0002832319045031485,0.0001431334186151217) (0.0002813476964822693,0.0001390826312214988) (0.0002795175882663407,0.0001351272888755482) (0.0002777395489220887,0.0001312632592238886) (0.0002760116749443618,0.0001274866233736468) (0.0002743321798135208,0.0001237936714450579) (0.0002726993870970145,0.0001201808869493922) (0.000271111723742488,0.0001166449242289469) (0.0002695677133451392,0.000113182613697237) (0.0002680659706871892,0.0001097909321201709) (0.0002666051951985272,0.0001064670034609781) (0.0002651841665008523,0.0001032080880131342) (0.0002638017391797983,0.0001000115640000827) (0.0002624568398896793,9.687493654425158e-05) (0.0002611484619643464,9.379581164506895e-05) (0.000259875661643154,9.077190021523203e-05) (0.0002586375550191201,8.780101014710799e-05) (0.0002574333132952092,8.488103047762535e-05) (0.0002562621627310737,8.200994237297854e-05) (0.0002551233784240628,7.918579553265442e-05) (0.0002540162822969589,7.64067139542925e-05) (0.0002529402403796992,7.367088958637248e-05) (0.0002518946572799679,7.097656776467156e-05) (0.0002508789773159156,6.832205856158012e-05) (0.0002498926753486083,6.570571404983835e-05) (0.0002489352533033764,6.312593348858186e-05) (0.0002480062327150102,6.058115540669412e-05) (0.0002471051396873203,5.806983936652438e-05) (0.0002462314907803041,5.559046851834398e-05) (0.0002453847467002224,5.314150951847674e-05) (0.0002445642235122309,5.072137259745946e-05) (0.0002437688155286992,4.832826192688401e-05) (0.0002429954873668802,4.595936706074574e-05) (0.0002422629555033308,4.362351265295233e-05) (0.0002415771398015799,4.132243195710797e-05) (0.0002409222398674029,3.904642191931008e-05) (0.0002402962964852813,3.679325239612209e-05) (0.0002396984485191589,3.456129155829261e-05) (0.0002391282171770799,3.234912333309956e-05) (0.0002385853097272785,3.015542767892321e-05) (0.0002380695529764168,2.797894908702392e-05) (0.0002375808597693166,2.581847402580881e-05) (0.0002371192057411015,2.367281085198106e-05) (0.0002366846295499242,2.154079434412531e-05) (0.0002362772158975231,1.942126594867359e-05) (0.0002358970976781734,1.731307931849997e-05) (0.0002355444534493444,1.521509413365457e-05) (0.0002352195000917325,1.312616607317138e-05) (0.0002349225036791943,1.104515475039709e-05) (0.0002346537673562336,8.970908167375133e-06) (0.0002344136385802209,6.902269883302437e-06) (0.0002342025091828207,4.838073126235917e-06) (0.0002340208099456997,2.777132710442131e-06) (0.0002338690241465582,7.182514909840384e-07) (0.0002337476759742159,-1.339793775561214e-06) (0.0002336573447237235,-3.39824111006495e-06) (0.0002335986419358785,-5.458373329355386e-06) (0.0002335722580363808,-7.521478007904956e-06) (0.000233578921019055,-9.588892719502073e-06) (0.0002336194195896414,-1.166199145976452e-05) (0.000233694609630754,-1.37421817551433e-05) (0.000233805391060953,-1.583093504934017e-05) (0.0002339527609022192,-1.792974783740031e-05) (0.000234137768863972,-2.004018810757915e-05) (0.0002343615443420049,-2.2163883127384e-05) (0.0002346253053742631,-2.430251841068468e-05) (0.0002349303344254877,-2.6457869891857e-05) (0.0002352780392118974,-2.863176703471506e-05) (0.0002356699054905927,-3.082614154679546e-05) (0.0002361075291841923,-3.304301754968894e-05) (0.0002365926288994007,-3.52845136865161e-05) (0.0002371270216865161,-3.755287830477247e-05) (0.0002377126934447592,-3.985045628112622e-05) (0.0002383517501960176,-4.217974143251549e-05) (0.0002390464573606096,-4.45433710888137e-05) (0.0002397992579310219,-4.694413349947215e-05) (0.0002406127503046231,-4.938500834178017e-05) (0.0002414897714408315,-5.186914023944927e-05) (0.0002424333493116744,-5.439989771561806e-05) (0.0002434467530478436,-5.698087585520622e-05) (0.00024453352083201,-5.961591306292698e-05) (0.0002456974440374835,-6.230914148213216e-05) (0.0002469426690416201,-6.50649727487651e-05) (0.0002482736565112508,-6.788816934976446e-05) (0.0002496952496899392,-7.078386262429586e-05) (0.000251212720331866,-7.375758698956513e-05) (0.0002528317680011198,-7.681534985705148e-05) (0.0002545586524721786,-7.99636407908584e-05) (0.0002564001721645797,-8.320952796890317e-05) (0.0002583637658776152,-8.656070687622846e-05) (0.0002604575950695588,-9.00255694730367e-05) (0.0002626905778077365,-9.361331511672716e-05) (0.0002650725782971354,-9.733400759566844e-05) (0.000267614432893138,-0.0001011987261380076) (0.000270328120048667,-0.0001052196805153718) (0.0002732269248042914,-0.0001094103549035545) (0.0002763255497918896,-0.000113785714854799) (0.0002796404313661326,-0.0001183623689691339) (0.0002831898828476073,-0.000123158850407739) (0.000286994426128786,-0.0001281958870582907) (0.0002910771385986876,-0.0001334967374162818) (0.0002954639975063521,-0.0001390876162538393) (0.0003001844718190037,-0.0001449981435539357) (0.0003052720028168116,-0.0001512619598460487) (0.0003107647595876824,-0.0001579174173515041) (0.0003167065032376029,-0.00016500843977391) (0.0003231475856018187,-0.0001725855943989159) (0.000330146365196643,-0.0001807073696114437) (0.0003377707270021403,-0.0001894418292807107) (0.0003461001818624752,-0.0001988686431102809) (0.0003552284557552605,-0.0002090816801643211) (0.0003652667555573765,-0.0002201923375006214) (0.0003763481742320007,-0.0002323338132237505) (0.0003886332019964623,-0.0002456667514378724) (0.0004023172495798578,-0.0002603866845292673) (0.0004176406455270047,-0.0002767340682627092) (0.0004349023525623305,-0.0002950079765475453) (0.0004544789821750096,-0.0003155851247244141) (0.0004768517957517925,-0.000338946845207051) (0.0005026457082924334,-0.000365718111289475) (0.0005326872324263635,-0.0003967254640663026) (0.0005680928983980466,-0.0004330854219310727) (0.0006104086752946449,-0.0004763438808887415) (0.0006618384307148024,-0.0005287045282918543) (0.0007256354880043854,-0.0005934203687255913) (0.0008068117452868422,-0.0006755027316311292) (0.0009135115547113597,-0.0007830949659768426) (0.001059912139347114,-0.0009303724449019667) (0.001273079162721253,-0.001144397168121849) (0.0016119202510418,-0.001484068656664567) (0.002233522466834162,-0.002106452143141432) (0.003743793127875588,-0.003617370403444778) (0.01280771303940885,-0.01268087301520869) (-0.008342942580979141,0.008465987055215144) (-0.003055836614934285,0.003178789030513618) (-0.001836073707253793,0.001958374735548334) (-0.001294197819875447,0.001415761648671264) (-0.0009881060207506183,0.001108908505657932) (-0.0007914831910656897,0.0009115177368154339) (-0.0006545688540682064,0.0007738357097446889) (-0.0005537922667119599,0.0006722948724470376) (-0.0004765458397935911,0.0005942892874698577) (-0.0004154751596956465,0.0005324654675662412) (-0.0003660010564590294,0.0004822447882130788) (-0.0003251234048387984,0.000440627442402258) (-0.0002907945017705713,0.0004055659187799702) (-0.0002615689242527872,0.0003756148938720021) (-0.0002363972626146687,0.0003497250119921172) (-0.0002144991762229982,0.0003271159541776467) (-0.0001952823774483385,0.0003071954222975155) (-0.0001782891871228792,0.0002895057145023924) (-0.0001631603656465722,0.0002736875462966927) (-0.0001496099904163909,0.0002594549504725118) (-0.0001374076458657648,0.0002465774631961808) (-0.00012636560444089,0.0002348672973090964) (-0.0001163293597087864,0.0002241698887657175) (-0.000107170607271912,0.0002143568632779171) (-9.878190451472334e-05,0.0002053207161462262) (-9.107258398287182e-05,0.000196970719063133) (-8.396563073300177e-05,0.0001892297891379093) (-7.739518418004315e-05,0.0001820320029207289) (-7.130461085032388e-05,0.0001753206543672809) (-6.564492641795314e-05,0.0001690466954640275) (-6.037353625653768e-05,0.0001631674713310963) (-5.545325619542209e-05,0.0001576457310314173) (-5.085145489881101e-05,0.0001524487826354234) (-4.653940399887083e-05,0.0001475478289836544) (-4.249168881237991e-05,0.0001429173931933271) (-3.868573545319115e-05,0.0001385348469911123) (-3.510145732017996e-05,0.0001343800406982183) (-3.172089166307737e-05,0.0001304349556890601) (-2.85279602548543e-05,0.0001266834537633168) (-2.550819755958399e-05,0.0001231110005386158) (-2.264854393085022e-05,0.0001197044989876575) (-1.993722066123596e-05,0.0001164521087719695) (-1.736357984230281e-05,0.0001133431204816463) (-1.491782211172949e-05,0.0001103677092513952) (-1.259122052733293e-05,0.000107517065357876) (-1.037568055632883e-05,0.0001047830598438735) (-8.263839927108068e-06,0.0001021582791918667) (-6.248988410598253e-06,9.963596156502269e-05) (-4.32482770127934e-06,9.720977540876325e-05) (-2.485774200740298e-06,9.487407629846079e-05) (-7.265479324709575e-07,9.262354770152805e-05) (9.576873839402115e-07,9.04533092133047e-05) (2.571363376186921e-06,8.835888921788209e-05) (4.118730749538852e-06,8.633599158723792e-05) (5.603511592291568e-06,8.43808584190088e-05) (7.029302170483808e-06,8.248985505738269e-05) (8.399412312031931e-06,8.065963392601345e-05) (9.716882347559766e-06,7.888712816242304e-05) (1.098470306245424e-05,7.71692839736527e-05) (1.220543833532237e-05,7.550353099353165e-05) (1.338162843002452e-05,7.388728801785421e-05) (1.451561827087429e-05,7.231817816983374e-05) (1.56095608936241e-05,7.079403767678435e-05) (1.666563919609846e-05,6.931259588024753e-05) (1.768566692834651e-05,6.787206780422543e-05) (1.86714959779032e-05,6.647055676728105e-05) (1.962483831039131e-05,6.510632413266058e-05) (2.054726115697234e-05,6.377781064190207e-05) (2.14404110379686e-05,6.248324752819448e-05) (2.230559990184424e-05,6.122139542057717e-05) (2.314421643433885e-05,5.999081485971873e-05) (2.395754488093634e-05,5.879019954892351e-05) (2.47467539213793e-05,5.761841228280925e-05) (2.551312440688227e-05,5.647400053682152e-05) (2.625762348989784e-05,5.535612671464735e-05) (2.698131999922322e-05,5.426366197627354e-05) (2.768520211436035e-05,5.319559982087285e-05) (2.837016094755409e-05,5.21511122361806e-05) (2.903722253011569e-05,5.112892752216643e-05) (2.968711219623691e-05,5.012852879092754e-05) (3.032067333303074e-05,4.914899808964042e-05) (3.093868539486075e-05,4.818954004840279e-05) (3.154184272711756e-05,4.724957045383584e-05) (3.213099083271634e-05,4.63278786514642e-05) (3.270668303646496e-05,4.542423951521595e-05) (3.326960145567236e-05,4.453787214958721e-05) (3.382037661332585e-05,4.366813022491506e-05) (3.435956178603912e-05,4.281465251087614e-05) (3.488787321039405e-05,4.197613696008992e-05) (3.540574112330597e-05,4.115269230383695e-05) (3.591373134493254e-05,4.034360894731126e-05) (3.641236771393632e-05,3.954834230602393e-05) (3.690210216323208e-05,3.876682453432607e-05) (3.738355787916073e-05,3.799731109810753e-05) (3.785707773171918e-05,3.724048951432858e-05) (3.832314376863879e-05,3.649562916188842e-05) (3.878220403559015e-05,3.576223925433576e-05) (3.92346396944193e-05,3.504145313425055e-05) (3.968100409099773e-05,3.432851437915735e-05) (4.01215823938514e-05,3.362666471870627e-05)


# name: fNOFRF
# type: range
# base, limit, increment
0 50 0.1




